# From: https://github.com/ScopeLift/foundry-template
name: CI

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  FOUNDRY_PROFILE: ci

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Build contracts
        run: |
          forge --version
          forge build --sizes

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Run tests
        run: forge test --no-match-contract ForkTest

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Run coverage
        run: forge coverage --report summary --report lcov

      ### TODO re-enable when we have better coverage and enforce threshold
      # - name: Verify minimum coverage
      #   uses: zgosalvez/github-actions-report-lcov@v2
      #   with:
      #     coverage-files: ./lcov.info
      #     minimum-coverage: 100 # Set coverage threshold.

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Install scopelint
        uses: engineerd/configurator@v0.0.8
        with:
          name: scopelint
          repo: ScopeLift/scopelint
          fromGitHubReleases: true
          version: latest
          pathInArchive: scopelint-x86_64-linux/scopelint
          urlTemplate: https://github.com/ScopeLift/scopelint/releases/download/{{version}}/scopelint-x86_64-linux.tar.xz
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check formatting
        run: |
          scopelint --version
          scopelint check

  slither-analyze:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v3

      - name: Run Slither
        uses: crytic/slither-action@v0.3.0
        id: slither # Required to reference this step in the next step.
        with:
          fail-on: none # Required to avoid failing the CI run regardless of findings.
          sarif: results.sarif
          slither-args: --filter-paths "./lib|./test" --exclude naming-convention

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.slither.outputs.sarif }}
