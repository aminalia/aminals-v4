// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AminalSpawned extends ethereum.Event {
  get params(): AminalSpawned__Params {
    return new AminalSpawned__Params(this);
  }
}

export class AminalSpawned__Params {
  _event: AminalSpawned;

  constructor(event: AminalSpawned) {
    this._event = event;
  }

  get aminalAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get aminalIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get mom(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get dad(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get backId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get armId(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get tailId(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get earsId(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get bodyId(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get faceId(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get mouthId(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }

  get miscId(): BigInt {
    return this._event.parameters[11].value.toBigInt();
  }
}

export class BreedAminal extends ethereum.Event {
  get params(): BreedAminal__Params {
    return new BreedAminal__Params(this);
  }
}

export class BreedAminal__Params {
  _event: BreedAminal;

  constructor(event: BreedAminal) {
    this._event = event;
  }

  get aminalOne(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get aminalTwo(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get auctionId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AminalFactory__getAminalVisualsByAddressResultValue0Struct extends ethereum.Tuple {
  get backId(): BigInt {
    return this[0].toBigInt();
  }

  get armId(): BigInt {
    return this[1].toBigInt();
  }

  get tailId(): BigInt {
    return this[2].toBigInt();
  }

  get earsId(): BigInt {
    return this[3].toBigInt();
  }

  get bodyId(): BigInt {
    return this[4].toBigInt();
  }

  get faceId(): BigInt {
    return this[5].toBigInt();
  }

  get mouthId(): BigInt {
    return this[6].toBigInt();
  }

  get miscId(): BigInt {
    return this[7].toBigInt();
  }
}

export class AminalFactory extends ethereum.SmartContract {
  static bind(address: Address): AminalFactory {
    return new AminalFactory("AminalFactory", address);
  }

  aminalsByIndex(param0: BigInt): Address {
    let result = super.call(
      "aminalsByIndex",
      "aminalsByIndex(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return result[0].toAddress();
  }

  try_aminalsByIndex(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "aminalsByIndex",
      "aminalsByIndex(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  geneAuction(): Address {
    let result = super.call("geneAuction", "geneAuction():(address)", []);

    return result[0].toAddress();
  }

  try_geneAuction(): ethereum.CallResult<Address> {
    let result = super.tryCall("geneAuction", "geneAuction():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  genes(): Address {
    let result = super.call("genes", "genes():(address)", []);

    return result[0].toAddress();
  }

  try_genes(): ethereum.CallResult<Address> {
    let result = super.tryCall("genes", "genes():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAminalByIndex(index: BigInt): Address {
    let result = super.call(
      "getAminalByIndex",
      "getAminalByIndex(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(index)],
    );

    return result[0].toAddress();
  }

  try_getAminalByIndex(index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getAminalByIndex",
      "getAminalByIndex(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(index)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAminalVisualsByAddress(
    aminalAddress: Address,
  ): AminalFactory__getAminalVisualsByAddressResultValue0Struct {
    let result = super.call(
      "getAminalVisualsByAddress",
      "getAminalVisualsByAddress(address):((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromAddress(aminalAddress)],
    );

    return changetype<AminalFactory__getAminalVisualsByAddressResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getAminalVisualsByAddress(
    aminalAddress: Address,
  ): ethereum.CallResult<AminalFactory__getAminalVisualsByAddressResultValue0Struct> {
    let result = super.tryCall(
      "getAminalVisualsByAddress",
      "getAminalVisualsByAddress(address):((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromAddress(aminalAddress)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<AminalFactory__getAminalVisualsByAddressResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  initialAminalSpawned(): boolean {
    let result = super.call(
      "initialAminalSpawned",
      "initialAminalSpawned():(bool)",
      [],
    );

    return result[0].toBoolean();
  }

  try_initialAminalSpawned(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "initialAminalSpawned",
      "initialAminalSpawned():(bool)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isAminal(param0: Address): boolean {
    let result = super.call("isAminal", "isAminal(address):(bool)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBoolean();
  }

  try_isAminal(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isAminal", "isAminal(address):(bool)", [
      ethereum.Value.fromAddress(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  loveVRGDA(): Address {
    let result = super.call("loveVRGDA", "loveVRGDA():(address)", []);

    return result[0].toAddress();
  }

  try_loveVRGDA(): ethereum.CallResult<Address> {
    let result = super.tryCall("loveVRGDA", "loveVRGDA():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proposals(): Address {
    let result = super.call("proposals", "proposals():(address)", []);

    return result[0].toAddress();
  }

  try_proposals(): ethereum.CallResult<Address> {
    let result = super.tryCall("proposals", "proposals():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  spawnAminal(
    momAddress: Address,
    dadAddress: Address,
    winningGeneIds: Array<BigInt>,
  ): Address {
    let result = super.call(
      "spawnAminal",
      "spawnAminal(address,address,uint256[8]):(address)",
      [
        ethereum.Value.fromAddress(momAddress),
        ethereum.Value.fromAddress(dadAddress),
        ethereum.Value.fromUnsignedBigIntArray(winningGeneIds),
      ],
    );

    return result[0].toAddress();
  }

  try_spawnAminal(
    momAddress: Address,
    dadAddress: Address,
    winningGeneIds: Array<BigInt>,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "spawnAminal",
      "spawnAminal(address,address,uint256[8]):(address)",
      [
        ethereum.Value.fromAddress(momAddress),
        ethereum.Value.fromAddress(dadAddress),
        ethereum.Value.fromUnsignedBigIntArray(winningGeneIds),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalAminals(): BigInt {
    let result = super.call("totalAminals", "totalAminals():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalAminals(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalAminals", "totalAminals():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BreedAminalsCall extends ethereum.Call {
  get inputs(): BreedAminalsCall__Inputs {
    return new BreedAminalsCall__Inputs(this);
  }

  get outputs(): BreedAminalsCall__Outputs {
    return new BreedAminalsCall__Outputs(this);
  }
}

export class BreedAminalsCall__Inputs {
  _call: BreedAminalsCall;

  constructor(call: BreedAminalsCall) {
    this._call = call;
  }

  get aminalOne(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get aminalTwo(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class BreedAminalsCall__Outputs {
  _call: BreedAminalsCall;

  constructor(call: BreedAminalsCall) {
    this._call = call;
  }

  get auctionId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _geneAuction(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _aminalProposals(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _Genes(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetupCall extends ethereum.Call {
  get inputs(): SetupCall__Inputs {
    return new SetupCall__Inputs(this);
  }

  get outputs(): SetupCall__Outputs {
    return new SetupCall__Outputs(this);
  }
}

export class SetupCall__Inputs {
  _call: SetupCall;

  constructor(call: SetupCall) {
    this._call = call;
  }
}

export class SetupCall__Outputs {
  _call: SetupCall;

  constructor(call: SetupCall) {
    this._call = call;
  }
}

export class SpawnAminalCall extends ethereum.Call {
  get inputs(): SpawnAminalCall__Inputs {
    return new SpawnAminalCall__Inputs(this);
  }

  get outputs(): SpawnAminalCall__Outputs {
    return new SpawnAminalCall__Outputs(this);
  }
}

export class SpawnAminalCall__Inputs {
  _call: SpawnAminalCall;

  constructor(call: SpawnAminalCall) {
    this._call = call;
  }

  get momAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get dadAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get winningGeneIds(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class SpawnAminalCall__Outputs {
  _call: SpawnAminalCall;

  constructor(call: SpawnAminalCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class SpawnInitialAminalsCall extends ethereum.Call {
  get inputs(): SpawnInitialAminalsCall__Inputs {
    return new SpawnInitialAminalsCall__Inputs(this);
  }

  get outputs(): SpawnInitialAminalsCall__Outputs {
    return new SpawnInitialAminalsCall__Outputs(this);
  }
}

export class SpawnInitialAminalsCall__Inputs {
  _call: SpawnInitialAminalsCall;

  constructor(call: SpawnInitialAminalsCall) {
    this._call = call;
  }

  get _visuals(): Array<SpawnInitialAminalsCall_visualsStruct> {
    return this._call.inputValues[0].value.toTupleArray<SpawnInitialAminalsCall_visualsStruct>();
  }
}

export class SpawnInitialAminalsCall__Outputs {
  _call: SpawnInitialAminalsCall;

  constructor(call: SpawnInitialAminalsCall) {
    this._call = call;
  }
}

export class SpawnInitialAminalsCall_visualsStruct extends ethereum.Tuple {
  get backId(): BigInt {
    return this[0].toBigInt();
  }

  get armId(): BigInt {
    return this[1].toBigInt();
  }

  get tailId(): BigInt {
    return this[2].toBigInt();
  }

  get earsId(): BigInt {
    return this[3].toBigInt();
  }

  get bodyId(): BigInt {
    return this[4].toBigInt();
  }

  get faceId(): BigInt {
    return this[5].toBigInt();
  }

  get mouthId(): BigInt {
    return this[6].toBigInt();
  }

  get miscId(): BigInt {
    return this[7].toBigInt();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
